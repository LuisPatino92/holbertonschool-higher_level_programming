The ``4-print_square`` module
=============================

Importing ``print_square`` from the ``4-print_square`` module.

	>>> print_square = __import__("4-print_square").print_square

Requirements checking:

    MODULE DOCSTRING:
	>>> m = __import__("4-print_square").__doc__
	>>> len(m) > 1
	True

    FUNCTION DOCSTRING:
	>>> f = __import__("4-print_square").print_square.__doc__
	>>> len(f) > 1
	True

    PEP8:
	>>> import os
	>>> os.popen("pep8 4-print_square.py").read()
	''

    NEW_LINE AT THE END OF THE FILE
	>>> os.popen("cat -e 4-print_square.py | tail -1").read()[-1]
	'\n'


VALID INPUTS HAVE CORRECT OUTPUTS:
	>>> print_square(4)
	####
	####
	####
	####

	>>> print_square(10)
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########


	>>> print_square(0)

	>>> print_square(1)
	#

	>>> print_square(20)
	####################
	####################
	####################
	####################
	####################
	####################
	####################
	####################
	####################
	####################
	####################
	####################
	####################
	####################
	####################
	####################
	####################
	####################
	####################
	####################

INVALID INPUTS RAISE ERRORS:

	>>> print_square(1.0)
	Traceback (most recent call last):
	...
	TypeError: size must be an integer

	>>> print_square(-2)
	Traceback (most recent call last):
	...
	ValueError: size must be >= 0

	>>> print_square(-96661.0)
	Traceback (most recent call last):
	...
	TypeError: size must be an integer

	>>> print_square([2, 3])
	Traceback (most recent call last):
	...
	TypeError: size must be an integer

	>>> print_square("1")
	Traceback (most recent call last):
	...
	TypeError: size must be an integer

	>>> print_square(6.36)
	Traceback (most recent call last):
	...
	TypeError: size must be an integer

	>>> print_square(-9)
	Traceback (most recent call last):
	...
	ValueError: size must be >= 0

	>>> print_square({"ki": 3})
	Traceback (most recent call last):
	...
	TypeError: size must be an integer

	>>> print_square("")
	Traceback (most recent call last):
	...
	TypeError: size must be an integer
